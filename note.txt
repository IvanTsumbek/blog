1 Урок                                               
                                                    ПОДГОТОВКА ПРОЕКТА
composer create-project laravel/laravel blog "8.*"                          install laravel version 8
composer require laravel/ui                                                 устанавливаем расширение ui (в php artisan появился ui)                                                                         
php artisan ui bootstrap                                                    install bootstrap
      ПОДГОТОВКА К ФРОНТУ:
php artisan ui:auth                                                         require authorisation
Set-ExecutionPolicy RemoteSigned -Scope CurrentUser                         вполняем последовательно,  
npm install; npm run dev                                                    если нет саксеса то опять     npm run dev
Теперь вносим все изменения по базе данных в ключ env и проверяем через php artisan migrate. Должно пройти успешно созданием таблиц

2 Урок
создаем таблицы с моделями с названием в единственном числе         php artisan make:model Post -m 
создаем связующие таблицы                                           php artisan make:model PostTag -m 
добавляем атрибуты в таблицах + те, что для связки (им делаем индексацию и форинг ки), и на всяк случай создаем свойства 
в моделях protected $table='название таблицы' и protected $guarded = false; чтоб давало вносить изменения
Внимание, категории мы должны создать раньше, чем таблицу пост, иначе пойдет ошибка!!!!!

3 Урок
protected $namespace = 'App\\Http\\Controllers';  раскомментировать в RouteServiceProvider.php
php artisan make:controller Main/IndexController
В роутах создали неймспейс и объеденили в группу. Подключили индексконтроллер
В индексконтроллере прописали инвоук
Во вьюшке в папке мейн создали вьюшку индекс
Create layout main. В него вставили код из blog.html и подгрузили папку assets в public
main class="blog" перенесли в индексвью и сделали подключения
оборачиваем ссылки main.blade и index.blade в  {{asset('')}} для подключения стилей

4 Урок Admin LTE
Прописывааем роут груп для админа и дублируем в админке роуты
Создаем дирректорию Админ и дублируем туда роут. В роуте в неймспейсе добавляем Admin
Во вьюшке создаем тоже admin и копируем туда main and layouts. Текст в обоих файлах убиваем
Текст Index в AdminLTE copy to main.blade.php а папке admin
content-wrapper переношу в index.blade.php и подключаю, то что унес в мейн
dist and plugins в AdminLTE copy to public
в IndexController for admin write: return view('admin.main.index');
Чистим лишние подключения в мейне и удаляем гору ненужных плагинов и чистим ненужный код
Чистим ненужный код в индексе

5 Урок 
Переносим сайд бар из мейн блейд в инклуд сайд бар, подключаем и добавляем одну менюшку, меняем ей иконку
Прописываем маршрут в роутах и создаем индекс контроллер в директиве админ/категори 
Создаем вьюшку в админ/катерии/копируем блейд из мейна и корректируем его. Подключаем в основном индексконтроллере
In  view main.blade добавляем ассет для подключения стилей и прочего

6 Урок 
Добавили неймспейс роуту категорий, прописали ссылку в сайдбаре на него
В вьюшке категорий добавили кнопу
Создаем маршрут, контроллер и вьюшку с формой для Create

7 Урок 
Create store route and StoreController
php artisan make:request Admin/Category/StoreRequest         public function authorize(){return true;} + rules
Корректируем StoreController 
create.blade прописываем маршрут, метод и ксрф, в инпуте нейм
Пробуем создать категорию
Если у нас форма пустая валидатор не срабатывает. Корректируем в криэйт.блейд форму на видео это 12минут 51 секунда!!!! @error

8 Урок Достаем из базы категории и ложим их во вьюшку
В индекс блейд добавили табллицу для категорий
В контроллере вызываем $categories = Category::all(); и передаем переменную во вьюшку
Во вьюшке вкладываем переменные в строки

9 Урок Отображаем еденичную категорию
Добавляем третью колонку, иконку и оборачиваем ее в ссылку.
Прописываем роут show
Создаем ShowController.php и прокидываем в конструктор переменную
Создаем вьюшку и правильно подключаем ее в индексблейде {{route('admin.category.show', $category->id)}}

10 Урок Edit для категорий
Прописываем маршрут эдит для категорий
Создаем EditController и вьюшку
В index.blade добавляем карандашик. Сам апдейт в след уроке

11 Урок Update для категорий
Прописываем маршрут update для категорий
Создаем контроллер и реквест к нему
В єдитблейде прописываем экшн и метод патч
В шоу блейде добавляем карандашик и выравниваем его

12 Урок Delete для категорий
php artisan make:migration add_column_soft_deletes_to_categories_table
Прописали софт делити и php artisan migrate
Прописываем трейт в модели: use SoftDeletes;
Добавляем во вьюшку мусорку и форму к ней!!!
В шоу блейде добавляем мусорку и выравниваем ее
Создаем контроллер

13 Урок Добавляем теги
Копируем всю группу с маршрутами категорий и переименовуем ее в теги
То же самое с контроллерами: меняем неймспейс и все переменные. Внимание, переподключаем реквесты!!!!!!!!!!!!!!!!!!!!!!!!
То же самое с вьюшками: меняем все переменные и прочее, а также поля плейсхолдера
То же самое с реквестами: меняем неймспейс
Он решил переименовать папку вьюшек categories на category. Проводим изменение и в контроллерах
В sidebar.blade.php добавляем в спесок теги и меняем иконку
php artisan make:migration add_column_soft_deletes_to_tags_table     
Заполняем миграцию для софтделита
В модели use SoftDeletes;
php artisan migrate
Тестируем

14 Урок